@using LangResources.Utility
@using SnitzCore.Extensions
@using SnitzDataModel.Extensions
@using WWW.Views.Helpers

@model List<SnitzDataModel.Models.PrivateMessage>

@{
    bool inbox = (bool) TempData["Inbox"];
}
<div class="container-fluid">
    <h5>@TempData["PageTitle"]</h5>
    <hr class="title" />

    @using (Ajax.BeginForm("DeleteMessage", null, new AjaxOptions { UpdateTargetId = "message-box", OnSuccess = "PmDeleteOK" }, new { id = "del-message-form" }))
    {
        <input type="text" id="inbox" name="inbox" value="@inbox.ToString()" style="display:none" />
        <table class="table table-striped table-hover message-table">
            <thead>
                <tr>
                    <th></th>
                    @if (inbox)
                    {
                        <th>@ResourceManager.GetLocalisedString("Subject", "PrivateMessage")</th>
                        <th>@ResourceManager.GetLocalisedString("From", "PrivateMessage")</th>
                        <th>@ResourceManager.GetLocalisedString("Received", "PrivateMessage")</th>
                    }
                    else
                    {
                        <th>@ResourceManager.GetLocalisedString("Subject", "PrivateMessage")</th>
                        <th>@ResourceManager.GetLocalisedString("To", "PrivateMessage")</th>
                        <th>@ResourceManager.GetLocalisedString("Sent", "PrivateMessage")</th>
                    }
                    <th></th>
                    <th><input title="@ResourceManager.GetLocalisedString("tipCheckAll", "Tooltip")" type="checkbox" id="checkAll" class="msg-selectall" value="-1" /></th>
                </tr>
            </thead>
            <tbody class="small">
                @try
                {
                    foreach (var msg in Model)
                    {
                        <tr class="getMessage padding-xs" data-val="@msg.Id" data-inbox="@inbox" data-read="@msg.Read">
                            <td class="col-xs-1 padding-xs">
                                @if (msg.Read == 0)
                                {
                                <i class="fa fa-envelope-o" data-toggle="tooltip" title="@ResourceManager.GetLocalisedString("tipUnread", "PrivateMessage")"></i>
                                    
                                }
                                else if (msg.Read < 0)
                                {
                                    <i class="fa fa-envelope" data-toggle="tooltip" title="@ResourceManager.GetLocalisedString("tipDraft", "PrivateMessage")"></i>
                                }
                                else
                                {
                                    <i class="fa fa-envelope-open-o" data-toggle="tooltip" title="@ResourceManager.GetLocalisedString("tipRead", "PrivateMessage")"></i>
                                }
                            </td>
                            <td class="col-xs-4 padding-xs">@msg.Subject</td>
                            <td class="col-xs-3"><a class="pm-button" data-target="NewMessage" data-val="@Html.Raw(msg.FromUsername ?? msg.ToUsername)" href="#" data-toggle="tooltip" title="@String.Format(ResourceManager.GetLocalisedString("SendPM", "PrivateMessage"), msg.FromUsername ?? msg.ToUsername)">@Html.Raw(msg.FromUsername ?? msg.ToUsername)</a></td>
                            <td class="col-xs-3 padding-xs ">
                                @if (msg.SentDate.HasValue)
                                {
                                    @msg.SentDate.Value.ToClientTime().ToFormattedString()
                                }
                            </td>
                            <td>@if (msg.SentDate.HasValue)
                                {
                                    @msg.Sent
                                        
                                }</td>
                            <td class="col-xs-1"><input type="checkbox" name="msg.Selected" class="checkbox msg-select" value="@msg.Id" /></td>
                        </tr>
                    }
                }
                catch (Exception ex)
                {
                  @Html.Raw(ex.Message)
                }


            </tbody>
        </table>
    }

</div>

