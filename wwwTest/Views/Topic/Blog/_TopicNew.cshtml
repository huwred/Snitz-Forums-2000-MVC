@using LangResources.Utility
@using WWW.Views.Helpers
@using SnitzCore.Extensions
@using SnitzConfig
@model SnitzDataModel.Models.Topic
@{
    DateTime date = Model.Date.Value;
    Model.ForumStatus = Model.Forum.Status;
    ViewBag.RatingSum = Model.Rating();
}
<div class="col-xs-9 col-xs-offset-2 blog-container clearfix">
    <div class="row-fluid">
        <h4>@Html.FormatBbCode(Model.Subject, false)</h4>
        @Html.Timeago(Model.Date)
        <div>
            @Html.Avatar(Model.PostAuthorName, Model.AuthorAvatar, "avatarsmall img-circle").If(Config.ShowAvatar)
            @Html.ActionLink(" " + Model.PostAuthorName, "UserProfile", "Account", new { id = Model.PostAuthorName }, new { title = ResourceManager.GetLocalisedString("tipViewProfile", "Tooltip"), data_toggle = "tooltip" })

        </div>
        @if (ViewBag.RatingSum > 0)
        {
            <input id="star-rating-demo" value="@ViewBag.RatingSum" type="number" class="rating" min=0 max=5 step=0.1 data-size="xs" />
        }
        else if (ViewBag.RatingSum < 0)
        {
            <input id="star-rating-demo" value="@ViewBag.RatingSum" type="number" class="rating" min=0 max=5 step=0.1 data-size="xs" />
        }
    </div>
    <div class="row-fluid">
        <div class="">
            <div class="blog-message">
                @Html.FormatBbCode(Model.Message)
            </div>
        </div>
        @Html.Partial("_MessageButtons", Model, new ViewDataDictionary(this.ViewData) { { "buttonsOnly", true }, { "buttons", new List<string> { "reply", "quote", "select" } } })
    </div>
</div>

