@using LangResources.Utility
@using SnitzConfig
@using SnitzCore.Extensions
@using SnitzCore.Utility
@using WWW.Views.Helpers
@using SnitzDataModel.Extensions


@model WWW.ViewModels.ActiveTopicsViewModel

@{
    ViewBag.Title = ResourceManager.GetLocalisedString("mnuForumActive", "Menu") + " | " + Config.ForumTitle;
    string metaTitle = ResourceManager.GetLocalisedString("mnuForumActive", "Menu") + " | " + Config.ForumTitle;
    bool isRighToLeft = SessionData.Get<bool>("isRighToLeft");
    var newlayout = ClassicConfig.GetIntValue("INTNEWLAYOUT", 0) == 1;
}
@section pageMeta
{
    <meta name="title" content="@metaTitle.TruncateLongString(70)">
    <meta name="description" content="@ResourceManager.GetLocalisedString("mnuForumActive", "Menu").TruncateLongString(149)">
    <meta name="author" content="@Config.ForumTitle">
    <meta name="copyright" content="@Html.Raw(String.Format(ClassicConfig.Copyright, DateTime.UtcNow.Year)) - @Config.ForumTitle">

    @*<meta name="keywords" content="@Html.ForumKeyWords(User,-1)">*@
}
@section styles{

    @Html.Raw(Config.ThemeCss("star-rating.min.css"))
}
@section breadcrumb
{
    @Html.BuildBreadcrumbNavigation()

}

@section sidebox
{

    @if (!newlayout)
    {
        <div class="side-box">
            @Html.Partial("_RightColumn", new ViewDataDictionary(this.ViewData) { { "show", new List<string>() { "online", "poll", "calendar", "photo" } } })
        </div>
    }
    else
    {
        @Html.Partial("_RightColumn", new ViewDataDictionary(this.ViewData) { { "show", new List<string>() { "online", "calendar", "photo" } } })
    }

}

<div class="padding-xs" id="wrap-body">

    @using (Html.BeginForm("Active", "Topic", new { pagenum = 1, readcookie = false }, FormMethod.Get, new { @id = "filterForm" }))
    {
        if (ClassicConfig.GetIntValue("STRGROUPCATEGORIES") == 1)
        {
            Html.RenderPartial("_CategoryFilter");
        }
        <div class="chunk-main row clearfix">
            <div class="col-xs-12 col-sm-6 padding-sm">
                @Html.EnumDropDownListFor(m => m.ActiveSince, new { onchange = "$(this).closest('form').submit();", @class = "form-control" }, ((DateTime)ViewData["LastVisitDateTime"]).ToClientTime().ToFormattedString())
            </div>
            <div class="col-xs-12 col-sm-6 padding-none">
                <div class="col-xs-10 col-lg-11 padding-sm">@Html.EnumDropDownListFor(m => m.Refresh, new { onchange = "$(this).closest('form').submit();", @class = "form-control" }, "")</div>
                <div class="col-xs-2 col-lg-1">
                    @if (ViewBag.GroupResults)
                    {
                        <i class="fa fa-object-group fa-1_5x group-results" style="cursor: pointer;" title="@ResourceManager.GetLocalisedString("tipUnGroupResults", "Tooltip")" data-toggle="tooltip"></i>
                    }
                    else
                    {
                        <i class="fa fa-object-ungroup fa-1_5x group-results" style="cursor: pointer;" title="@ResourceManager.GetLocalisedString("tipGroupResults", "Tooltip")" data-toggle="tooltip"></i>
                    }
                </div>
            </div>
            <input type="hidden" value="1" id="pagenum" name="pagenum" />
            <input type="hidden" value="false" id="readcookie" name="readcookie" />
            <input type="hidden" value="@ViewBag.GroupResults.ToString().ToLower()" id="groupresults" name="groupresults" />
        </div>
    }
    <p></p>
    @if (Model.RecentTopics.TotalPages > 1)
    {
        <div class="chunk-main clearfix">
            <div class="col-xs-12 col-md-9 ">
                @{ Html.RenderPartial("_ActivePager"); }
            </div>
            <div class="hidden-xs hidden-sm col-md-3 pull-right flip padding-xs">
                @{ Html.RenderPartial("_PageSize"); }
            </div>
        </div>
    }
    @if (Model.RecentTopics.Items.Count > 0)
    {
        if (newlayout)
        {

            <div class="chunk-main panel-body">
                <div id="topic-panel">
                    <div class="forumbg">
                        <div class="inner">
                            <ul class="topiclist topics" id="recenttopics">
                                @{ ViewBag.bg = "bg1"; }
                                @for (int i = 0; i < Model.RecentTopics.Items.Count; i++)
                                {
                                    @Html.DisplayFor(x => x.RecentTopics.Items[i], "TopicNew")
                                    ViewBag.bg = ViewBag.bg == "bg1" ? "bg2" : "bg1";
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="chunk-main clearfix">

                @if (Model.RecentTopics.TotalPages > 1)
                {
                    <div class="col-xs-8 col-md-8">
                        @{ Html.RenderPartial("_ActivePager"); }
                    </div>
                    <div class="col-xs-4 col-md-2">
                        @{ Html.RenderPartial("_JumpTo"); }
                    </div>
                    <div class="hidden-xs hidden-sm col-md-2 pull-right flip padding-xs">
                        @{ Html.RenderPartial("_PageSize"); }
                    </div>
                }
                else
                {
                    <div class="col-xs-12 pull-right flip">
                        @{ Html.RenderPartial("_JumpTo"); }
                    </div>
                }
            </div>

            <div class="chunk-main">
                <div class="panel panel-body">
                    <div class="col-xs-12 col-md-6 col-lg-5 padding-none">
                        @{ Html.RenderPartial("_IconGlossaryNew"); }
                    </div>
                    <div class="hidden-xs hidden-sm hidden-md col-lg-2">
                    </div>
                    <div class="hidden-xs hidden-sm col-md-6">
                        @{ Html.RenderAction("OnlineUsers", new { sidebar = false }); }
                    </div>
                </div>
            </div>

        }
        else
        {
            <div id="topic-panel">
                @Html.DisplayFor(m => m.RecentTopics.Items)
            </div>
            <div class="row-fluid clearfix">

                @if (Model.RecentTopics.TotalPages > 1)
                {
                    <div class="col-xs-6 col-md-8">
                        @{ Html.RenderPartial("_ActivePager"); }
                    </div>
                    <div class="col-xs-3 col-md-2">
                        @{ Html.RenderPartial("_JumpTo"); }
                    </div>
                    <div class="col-xs-3 col-md-2">
                        @{ Html.RenderPartial("_pageSize"); }
                    </div>
                }
                else
                {
                    <div class="col-xs-12 pull-right flip">
                        @{ Html.RenderPartial("_JumpTo"); }
                    </div>
                }
            </div>

        }
    }
    else
    {
        <div class="chunk-main row text-center topic-recent">
            <span class="text-center">@ResourceManager.GetLocalisedString("NoActiveTopics", "General") @Html.DisplayNameForEnum(Model.ActiveSince)</span>
        </div>
    }
    @if (!newlayout)
    {
        <div class="row-fluid">
            @{ Html.RenderPartial("_IconGlossary"); }
        </div>
    }

</div>


@section scripts
{
    @Scripts.Render("~/Scripts/star-rating.min.js")
    <script>

        $(document)
            .ready(function () {
                $('.topic-btns').each(function () {
                    if ($(this).is(':empty') || !$(this).html().trim()) {
                        var parent = $(this).closest('dl');
                        $("dt", parent).attr("class", "col-xs-12 col-md-7");
                    }
                });
                $(".group-results")
                    .on("click",
                        function() {
                            var hiddenField = $('#groupresults'),
                                val = hiddenField.val();
                            hiddenField.val(val === "true" ? "false" : "true");

                            $("#filterForm").submit();
                        });

                $(".form-control").attr('data-val', 'false');

                if ('@ViewBag.GroupResults' === 'True' && '@ClassicConfig.GetIntValue("INTNEWLAYOUT", 0)' === '1') {
                    var lis = $("#recenttopics > li");
                    var as = { };

                    $.each(lis, function(i, el){
                        var c = $(el).data("val");

                        if(as[c] == null) {
                            as[c] = new Array();
                        }

                        as[c].push(el);
                    });

                    $("#recenttopics").empty();

                    $.each(as, function(i, el) {
                        var d = $(el).data("id");
                        var li = $("<li class=\"forum-group\"><h5><a href='/Forum/" + d + "'>" + i + "</a></h5></li>");
                        var ul = $("<ul></ul>");

                        $(ul).append(el);
                        $(li).append(ul);
                        $("#recenttopics").append(li);
                    });
                } else if ('@ViewBag.GroupResults' === 'True') {
                    var groups = {};
                    $('.topic-recent')
                        .each(function() {
                            try {
                                var className = this.className.match(/(F\d+)/)[1],
                                    $group = groups[className];
                                if (!$group) {
                                    $group = $('<div />',
                                            {
                                                'class': 'group',
                                                html: '<h4>' + $(this).data('val') + '</h4>'
                                            })
                                        .insertAfter(this);
                                    groups[className] = $group;
                                }
                                $group.append(this);
                            } catch (e) {

                            }

                        });
                }
            });

        var refresh = '@ViewBag.RefreshSeconds';

        if (refresh > 0)
            setInterval("window.location.reload();", refresh);
    </script>
}
