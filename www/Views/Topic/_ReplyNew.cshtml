
@using LangResources.Utility
@using Snitz.Base
@using SnitzConfig
@using SnitzCore.Extensions
@using SnitzDataModel.Extensions
@using SnitzDataModel.Models
@using SnitzMembership
@using WWW.Views.Helpers
@using WebSecurity = WebMatrix.WebData.WebSecurity

@model SnitzDataModel.Models.Reply
@{
    bool isOnline = OnlineUsersInstance.OnlineUsers.IsOnline(Model.Author.Username);
    string cssonline = "";
    string unmoderatedClass = "";
    if (isOnline)
    {
        cssonline = "online";
    }

    switch (Model.PostStatus)
    {
        case Enumerators.PostStatus.UnModerated:
            unmoderatedClass = "topic-unmoderated";
            break;
        case Enumerators.PostStatus.OnHold:
            unmoderatedClass = "topic-onhold";
            break;
        case Enumerators.PostStatus.Draft:
            unmoderatedClass = "topic-draft";
            break;

    }
    string cssusername = "member";
    if (Roles.IsUserInRole(Model.Author.Username, "Administrator"))
    {
        cssusername = "administrator";
    }
    else if (Roles.IsUserInRole(Model.Author.Username, "Moderator"))
    {
        cssusername = "moderator";
    }
}

@if (Model.PostStatus == Enumerators.PostStatus.Draft)
{
    if (SnitzMembership.WebSecurity.CurrentUserId == Model.AuthorId)
    {
        <div class="reply post has-profile" id="reply_@Model.Id">
            <div class="inner equal" id="@Model.Id">
                <dl class="postprofile @unmoderatedClass hidden-xs hidden-sm col-md-2" id="profile_@Model.AuthorId">
                    <dt class="profile-rank has-avatar">
                        @{
                            Dictionary<int, Ranking> ranking = ViewBag.Ranking;
                            bool isAuthor = Model.AuthorId == SnitzMembership.WebSecurity.CurrentUserId;
                        }
                        <div class="avatar-container @cssonline">
                            @if (WebSecurity.IsAuthenticated)
                            {
                                <a href="@Url.Action("UserProfile", "Account", new {id = Model.Author.Username})" data-toggle="tooltip" title="">
                                    @Html.Avatar(Model.Author.Username, Model.Author.PhotoUrl, "avatar img-circle").If(Config.ShowAvatar)
                                </a>
                                @Html.ActionLink(Model.Author.Username, "UserProfile", "Account", new { id = Model.Author.Username }, new { data_toggle = "tooltip" }).If(!Config.ShowAvatar)
                            }
                            else
                            {
                                @Html.Avatar(Model.Author.Username, Model.Author.PhotoUrl, "avatar img-circle").If(Config.ShowAvatar)
                                if (!Config.ShowAvatar)
                                {
                                    @Html.Raw(Model.Author.Username)
                                }
                            }
                        </div>
                        <a class="@cssusername" href="@Url.Action("UserProfile", "Account", new {id = Model.Author.Username})">@Model.Author.Username</a>
                    </dt>
                    <dd class="profile-rank">
                        @Html.MemberRankTitleStars(Model.Author, ranking)
                    </dd>
                    <dd class="profile-country">
                        @Model.Author.Country
                    </dd>
                    <dd class="profile-posts"><span class="badge center-block numbers" data-toggle="tooltip" title="@ResourceManager.GetLocalisedString("tipPostCount", "Tooltip") @Model.Author.PostCount">@Model.Author.PostCount</span></dd>
                    <dd class="profile-joined"><b>@ResourceManager.GetLocalisedString("ProfileDate", "General"): </b>@Html.Timeago(Model.Author.CreatedDate)</dd>
                    <dd class="">
                    </dd>
                </dl>
                <div class="col-xs-12 hidden-sm hidden-md hidden-lg padding-xs"><span><a class="@cssusername" href="@Url.Action("UserProfile", "Account", new {id = Model.Author.Username})">@Model.Author.Username</a></span> <span class="badge center-block numbers" data-toggle="tooltip" title="@ResourceManager.GetLocalisedString("tipPostCount", "Tooltip") @Model.Author.PostCount">@Model.Author.PostCount</span></div>

                <div class="postbody col-xs-12 col-md-10">
                    <div id="post_content_@Model.Id">
                        <h3 class="first">
                            @Html.Partial("_MessageButtons", Model, new ViewDataDictionary(this.ViewData) { { "buttonsOnly", true } })
                        </h3>
                        <p class="author">
                            <a href="@Url.Action("Posts", "Topic", new {id = Model.Id, pagenum = 1, archived = Model.Archived})" class="">@Html.Timeago(Model.Date)</a>
                        </p>
                        <div class="content message clearfix">
                            @Html.FormatBbCode(Model.Message)
                            <br />
                            <br />
                        </div>

                    </div>

                </div>
                @if (Model.ShowSig == 1 && !String.IsNullOrEmpty(Model.Author.Signature) || (Model.LastEditDate.HasValue && ClassicConfig.ShowEditedBy))
                {
                    <div class="message-footer">
                        @if (Model.LastEditDate.HasValue && ClassicConfig.ShowEditedBy)
                        {
                            <span class="text-danger text-right">@ResourceManager.GetLocalisedString("lblEditedBy", "labels") @Html.Raw(Model.EditedBy) @Html.Timeago(Model.LastEditDate.Value)</span>
                        }
                        @if (ClassicConfig.GetValue("STRSIGNATURES") == "1" && ClassicConfig.GetValue("STRDSIGNATURES") == "1" && Model.ShowSig == 1 && !String.IsNullOrEmpty(Model.Author.Signature))
                        {
                            if (!String.IsNullOrEmpty(Model.Author.Signature.Trim()))
                            {
                                <div class="signature">
                                    @Html.FormatBbCode(Model.Author.Signature)
                                </div>
                            }

                        }
                    </div>
                }

            </div>
        </div>
    }
}
else
{
    string rowcss = ViewBag.bg;
    string headcss = ViewBag.bg == "bg1" ? "bg2" : "bg1";

<div class="reply post has-profile @rowcss" id="reply_@Model.Id">
    <div class="inner equal" id="@Model.Id">
        <div class="col-xs-12 @headcss">
            <div class="col-xs-12 col-md-10 col-md-offset-2 author">
                <h3 class="first hidden-xs">
                    @Html.Partial("_MessageButtons", Model, new ViewDataDictionary(this.ViewData) { { "buttonsOnly", true } })
                </h3>
                <a rel="bookmark" href="#@Model.Id" title="#permalink"><i class="fa fa-hashtag"></i></a>
                <span class="hidden-md hidden-lg"><a class="@cssusername" href="@Url.Action("UserProfile", "Account", new {id = Model.Author.Username})">@Model.Author.Username</a></span>
                @Html.Timeago(Model.Date)
            </div>
        </div>

        <dl class="postprofile @unmoderatedClass hidden-xs hidden-sm col-md-2" id="profile_@Model.AuthorId">
            <dt class="profile-rank has-avatar">
                @{
                    Dictionary<int, Ranking> ranking = ViewBag.Ranking;
                    bool isAuthor = Model.AuthorId == SnitzMembership.WebSecurity.CurrentUserId;
                }
                <div class="avatar-container @cssonline">
                    @if (WebSecurity.IsAuthenticated)
                    {
                        <a href="@Url.Action("UserProfile", "Account", new {id = Model.Author.Username})" data-toggle="tooltip" title="">
                            @Html.Avatar(Model.Author.Username, Model.Author.PhotoUrl, "avatar img-circle").If(Config.ShowAvatar)
                        </a>
                        @Html.ActionLink(Model.Author.Username, "UserProfile", "Account", new { id = Model.Author.Username }, new { data_toggle = "tooltip" }).If(!Config.ShowAvatar)
                    }
                    else
                    {
                        @Html.Avatar(Model.Author.Username, Model.Author.PhotoUrl, "avatar img-circle").If(Config.ShowAvatar)
                        if (!Config.ShowAvatar)
                        {
                            @Html.Raw(Model.Author.Username)
                        }
                    }
                </div>
                <a class="@cssusername" href="@Url.Action("UserProfile", "Account", new {id = Model.Author.Username})">@Model.Author.Username</a>
            </dt>
            <dd class="profile-rank">
                @Html.MemberRankTitleStars(Model.Author, ranking)
            </dd>
            <dd class="profile-country">
                @Model.Author.Country
            </dd>
            <dd class="profile-posts"><span class="badge center-block numbers" data-toggle="tooltip" title="@ResourceManager.GetLocalisedString("tipPostCount", "Tooltip") @Model.Author.PostCount">@Model.Author.PostCount</span></dd>
            <dd class="profile-joined"><b>@ResourceManager.GetLocalisedString("ProfileDate", "General"): </b>@Html.Timeago(Model.Author.CreatedDate)</dd>
            <dd class="">
                <ul class="list-unstyled list-inline padding-none profile-list" style="margin-bottom: 0;">
                    @{
                        bool disabled = SnitzMembership.WebSecurity.IsUserInRole(Model.Author.Username, "Disabled") || Model.Author.Username == "zapped" || Model.Author.Username == "n/a";
                    }
                    @if (!disabled)
                    {
                        if (WebSecurity.IsAuthenticated && ClassicConfig.AllowEmail && Model.Author.ReceiveEmails == 1)
                        {
                            if (!isAuthor)
                            {
                                <li class="padding-xs">
                                    <div title="@ResourceManager.GetLocalisedString("tipAuthorEmail", "Tooltip")" data-toggle="tooltip" class="send-email fa fa-2x fa-envelope" data-url="@Model.Id" data-id="@Model.AuthorId" style="cursor: pointer">
                                    </div>
                                </li>
                            }
                        }
                        if (WebSecurity.IsAuthenticated && ClassicConfig.GetValue("STRPMSTATUS") == "1" && ((Model.Author.PrivateMessageReceive == 1 && !isAuthor)) || (User.IsAdministrator() && !isAuthor))
                        {
                            <li class="padding-xs">
                                <div title="@ResourceManager.GetLocalisedString("tipAuthorPM", "Tooltip")" data-toggle="tooltip" class="sendpm-link fa fa-2x fa-comments" data-url="@Model.Id" data-id="@Model.Author.Username" style="cursor: pointer">
                                </div>
                            </li>
                        }
                        if (WebSecurity.IsAuthenticated && !String.IsNullOrWhiteSpace(Model.Author.Homepage))
                        {
                            <li class="padding-xs">
                                <a href="@Model.Author.Homepage" data-toggle="tooltip" class="topic-link" title="@ResourceManager.GetLocalisedString("tipAuthorHomePage", "Tooltip")" target="_new">
                                    <i class="fa fa-2x fa-home"></i>
                                </a>
                                <div></div>
                            </li>
                        }

                    }
                    @if (ViewBag.IsAdministrator)
                    {
                        if (ClassicConfig.GetValue("STRIPLOGGING") == "1")
                        {
                            <li class="padding-xs">
                                <div class="showIPAddress fa fa-2x fa-sitemap" data-toggle="tooltip" title="@ResourceManager.GetLocalisedString("tipAuthorIP", "Tooltip")" data-id="@Model.PosterIp" style="cursor: pointer">
                                </div>
                            </li>
                        }
                        if (disabled)
                        {
                            <li class="padding-xs">
                                @Html.ActionLink(" ", "UnLockUser", "Account", new { user = Model.AuthorId }, new { @class = "fa fa-2x fa-unlock-alt", title = ResourceManager.GetLocalisedString("tipAuthorUnlock", "Tooltip"), data_toggle = "tooltip" })
                            </li>
                        }
                        else
                        {
                            <li class="padding-xs">
                                @Html.ActionLink(" ", "LockUser", "Account", new { user = Model.AuthorId }, new { @class = "fa fa-2x fa-lock", title = ResourceManager.GetLocalisedString("tipAuthorLock", "Tooltip"), data_toggle = "tooltip" })
                            </li>
                        }
                    }
                </ul>

            </dd>
        </dl>

        <div class="postbody col-xs-12 col-md-10">
            <div id="post_content_@Model.Id">


                <div class="content message clearfix">
                    @Html.FormatBbCode(Model.Message)
                    <br /><br />
                </div>
            </div>
        </div>

        @if ((Model.ShowSig == 1 && !String.IsNullOrEmpty(Model.Author.Signature)) || (Model.LastEditDate.HasValue && ClassicConfig.ShowEditedBy))
        {
            <div class="message-footer clearfix">
                @if (Model.LastEditDate.HasValue && ClassicConfig.ShowEditedBy)
                {
                    <span class="text-danger text-right">@ResourceManager.GetLocalisedString("lblEditedBy", "labels") @Html.Raw(Model.EditedBy) @Html.Timeago(Model.LastEditDate.Value)</span>
                }
                @if (ClassicConfig.GetValue("STRSIGNATURES") == "1" && ClassicConfig.GetValue("STRDSIGNATURES") == "1" && Model.ShowSig == 1 && !String.IsNullOrEmpty(Model.Author.Signature))
                {
                    if (!String.IsNullOrEmpty(Model.Author.Signature.Trim()))
                    {
                        <div class="signature">
                            @Html.FormatBbCode(Model.Author.Signature)
                        </div>
                    }
                }
            </div>
        }
    </div>
    <div class="col-xs-12 hidden-sm hidden-md hidden-lg bg1" style="margin-bottom: 10px;">
        @Html.Partial("_MessageButtons", Model, new ViewDataDictionary(this.ViewData) { { "buttonsOnly", true } })
    </div>
</div>
}
