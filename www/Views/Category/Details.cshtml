@using LangResources.Utility
@using SnitzCore.Extensions
@using SnitzDataModel.Extensions
@model SnitzDataModel.Models.Category

@section sidebox{

    @Html.Partial("_RightColumn", new ViewDataDictionary(this.ViewData) { { "show", new List<string>() { "catlist", "online" } } })
}
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times; </button>
    <h4 class="modal-title" id="myModalLabel">Edit Category @Model.Title</h4>
</div>
<div class="modal-body clearfix">
    @using (Html.BeginForm("CreateEdit", "Category", new { returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "categoryPropertiesForm" }))
    {
        ViewBag.SubmitButton = ResourceManager.GetLocalisedString("btnSave", "labels");
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.HiddenFor(model => model.Id)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Title)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Subscription, new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.Subscription, new { @class = "form-control" }, "")
            @Html.ValidationMessageFor(model => model.Subscription)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Moderation, new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.Moderation, new { @class = "form-control" }, "")
            @Html.ValidationMessageFor(model => model.Moderation)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label" })
            @Html.EnumDropDownListFor(model => model.Status, new { @class = "form-control" }, "")
            @Html.ValidationMessageFor(model => model.Status)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Order, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Order, new { @class = "form-control aspinEdit" })
        </div>


        @Html.HiddenFor(model => model.Id)

        Html.RenderPartial("_FormButtons");

    }


</div>


